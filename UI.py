# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'UI.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(509, 259)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.Bg = QtWidgets.QLabel(self.centralwidget)
        self.Bg.setGeometry(QtCore.QRect(0, 0, 511, 261))
        self.Bg.setText("")
        self.Bg.setPixmap(QtGui.QPixmap("background.jpg"))
        self.Bg.setScaledContents(True)
        self.Bg.setObjectName("Bg")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(20, 203, 111, 51))
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap("sounds.gif"))
        self.label_2.setScaledContents(True)
        self.label_2.setObjectName("label_2")
        self.gif1 = QtWidgets.QLabel(self.centralwidget)
        self.gif1.setGeometry(QtCore.QRect(180, 50, 181, 121))
        self.gif1.setText("")
        self.gif1.setPixmap(QtGui.QPixmap("animation.gif"))
        self.gif1.setScaledContents(True)
        self.gif1.setObjectName("gif1")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(390, 9, 101, 35))
        self.textBrowser.setStyleSheet("color: rgb(0, 0, 0);\n"
"font: 8pt \"Rockwell\";\n"
"background-color: rgb(0, 0, 0);")
        self.textBrowser.setObjectName("textBrowser")
        self.start = QtWidgets.QPushButton(self.centralwidget)
        self.start.setGeometry(QtCore.QRect(180, 180, 81, 27))
        self.start.setAutoFillBackground(False)
        self.start.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Start.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.start.setIcon(icon)
        self.start.setIconSize(QtCore.QSize(94, 24))
        self.start.setObjectName("start")
        self.stop = QtWidgets.QPushButton(self.centralwidget)
        self.stop.setGeometry(QtCore.QRect(290, 180, 81, 27))
        self.stop.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("Quit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.stop.setIcon(icon1)
        self.stop.setIconSize(QtCore.QSize(94, 24))
        self.stop.setObjectName("stop")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Rockwell\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600; font-style:italic; color:#000000;\">Time - 12:00:00</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600; font-style:italic; color:#000000;\">Date - 2022-02-28</span></p></body></html>"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
